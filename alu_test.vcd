$date
	Fri Jun 13 02:14:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 1 ! CF $end
$var wire 1 " ZF $end
$var wire 1 # SF $end
$var wire 7 $ R [6:0] $end
$var reg 7 % A [6:0] $end
$var reg 7 & B [6:0] $end
$var reg 1 ' OP $end
$scope module uut $end
$var wire 7 ( A [6:0] $end
$var wire 7 ) B [6:0] $end
$var wire 1 ! CF $end
$var wire 1 ' OP $end
$var wire 1 " ZF $end
$var wire 1 # SF $end
$var wire 7 * R_ROR [6:0] $end
$var wire 7 + R_NOR [6:0] $end
$var reg 7 , result [6:0] $end
$scope module NOR1 $end
$var wire 7 - A [6:0] $end
$var wire 7 . B [6:0] $end
$var wire 7 / result [6:0] $end
$upscope $end
$scope module ROR1 $end
$var wire 7 0 in [6:0] $end
$var wire 3 1 shift [2:0] $end
$var reg 7 2 out [6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1000000 2
b11 1
b100 0
b1111000 /
b11 .
b100 -
b1111000 ,
b1111000 +
b1000000 *
b11 )
b100 (
0'
b11 &
b100 %
b1111000 $
1#
0"
0!
$end
#10000
0#
b1110001 +
b1110001 /
b11 $
b11 ,
b10 1
b11 *
b11 2
1'
b10 &
b10 )
b10 .
b1100 %
b1100 (
b1100 -
b1100 0
#20000
